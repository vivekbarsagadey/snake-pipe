{
  "filePath" : "/home/darshan/Projects/Simple-Java-Helpdesk-Application-master/Daily/src/d2.java",
  "uniqueId" : "AST_404_1754048972024",
  "imports" : [ "import java.sql.Connection;", "import java.sql.DriverManager;", "import java.sql.ResultSet;", "import java.sql.Statement;" ],
  "classes" : [ {
    "name" : "d2",
    "qualifiedName" : "d2",
    "modifiers" : "[public ]",
    "isInterface" : false,
    "extendsList" : "[]",
    "implementsList" : "[]",
    "annotations" : "[]",
    "comment" : "\r\n *\r\n * @author mayj\r\n ",
    "typeParameters" : [ ],
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "isInner" : false,
    "uniqueId" : "AST_405_1754048972024",
    "symbolId" : "d2",
    "fields" : [ {
      "name" : "con",
      "qualifiedName" : "d2.con",
      "declaredType" : "Connection",
      "resolvedType" : "java.sql.Connection",
      "erasedType" : "java.sql.Connection",
      "modifiers" : "[]",
      "annotations" : "[]",
      "comment" : "No comment",
      "uniqueId" : "AST_406_1754048972025",
      "symbolId" : "d2.con",
      "isStatic" : false,
      "isFinal" : false,
      "visibility" : "PACKAGE"
    }, {
      "name" : "stmt",
      "qualifiedName" : "d2.stmt",
      "declaredType" : "Statement",
      "resolvedType" : "java.sql.Statement",
      "erasedType" : "java.sql.Statement",
      "modifiers" : "[]",
      "annotations" : "[]",
      "comment" : "No comment",
      "uniqueId" : "AST_407_1754048972026",
      "symbolId" : "d2.stmt",
      "isStatic" : false,
      "isFinal" : false,
      "visibility" : "PACKAGE"
    }, {
      "name" : "rs",
      "qualifiedName" : "d2.rs",
      "declaredType" : "ResultSet",
      "resolvedType" : "java.sql.ResultSet",
      "erasedType" : "java.sql.ResultSet",
      "modifiers" : "[]",
      "annotations" : "[]",
      "comment" : "No comment",
      "uniqueId" : "AST_408_1754048972038",
      "symbolId" : "d2.rs",
      "isStatic" : false,
      "isFinal" : false,
      "visibility" : "PACKAGE"
    } ],
    "constructors" : [ {
      "name" : "d2",
      "signature" : "d2()",
      "parameters" : [ ],
      "parameterTypes" : [ ],
      "modifiers" : "[]",
      "annotations" : "[]",
      "comment" : "No comment",
      "body" : "{\n    try {\n        Class.forName(\"org.apache.derby.jdbc.ClientDriver\");\n        con = DriverManager.getConnection(\"jdbc:derby://localhost:1527/dial\", \"jeremy\", \"jeremy\");\n        stmt = con.createStatement();\n        Class.forName(\"org.apache.derby.jdbc.ClientDriver\");\n    } catch (Exception e) {\n        System.out.println(\"problem \" + e);\n    }\n}",
      "uniqueId" : "AST_409_1754048972039",
      "symbolId" : "d2.d2()",
      "visibility" : "PACKAGE"
    } ],
    "methods" : [ {
      "name" : "insert",
      "qualifiedName" : "d2.insert",
      "signature" : "insert()",
      "returnType" : "void",
      "resolvedReturnType" : "void",
      "parameters" : [ ],
      "parameterTypes" : [ ],
      "modifiers" : "[public ]",
      "annotations" : "[]",
      "comment" : "\r\n     *hi there\r\n     ",
      "body" : "{\n    try {\n        rs = stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\");\n        total();\n        displayAllTickets();\n        System.out.println(\"----------------------------------------------\");\n        System.out.println(\"Number of tickets? \" + (total() + 1));\n        String insert = \"INSERT INTO JEREMY.TICKET (ID,NAME,PHONE,TAG,DATE,PROBLEM,NOTES,STATUS) VALUES (\" + (total() + 1) + \",'hello','33333','hello',' Wed Jan 08 12:12:05',' hello',' hello','NEW')\";\n        System.out.println(insert);\n        stmt.executeUpdate(insert);\n        rs = stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\");\n        total();\n        displayAllTickets();\n        rs = stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\");\n        total();\n    } catch (Exception e) {\n        System.out.println(\"SQL problem \" + e);\n    }\n}",
      "uniqueId" : "AST_410_1754048972040",
      "symbolId" : "d2.insert()",
      "visibility" : "PUBLIC",
      "isAbstract" : false,
      "isStatic" : false,
      "isFinal" : false,
      "isSynchronized" : false,
      "isNative" : false,
      "isDefault" : false,
      "controlFlowStatements" : [ "Try", "Catch: Exception e" ],
      "methodCalls" : [ {
        "methodName" : "executeQuery",
        "sourceCode" : "stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\")",
        "resolvedMethod" : "java.sql.Statement.executeQuery(java.lang.String)",
        "returnType" : "java.sql.ResultSet",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "\"SELECT * FROM JEREMY.TICKET\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_411_1754048972042"
      }, {
        "methodName" : "total",
        "sourceCode" : "total()",
        "resolvedMethod" : "d2.total()",
        "returnType" : "int",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_412_1754048972046"
      }, {
        "methodName" : "displayAllTickets",
        "sourceCode" : "displayAllTickets()",
        "resolvedMethod" : "d2.displayAllTickets()",
        "returnType" : "java.lang.String",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_413_1754048972046"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"----------------------------------------------\")",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"----------------------------------------------\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_414_1754048972047"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"Number of tickets? \" + (total() + 1))",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"Number of tickets? \" + (total() + 1)" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_415_1754048972048"
      }, {
        "methodName" : "total",
        "sourceCode" : "total()",
        "resolvedMethod" : "d2.total()",
        "returnType" : "int",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_416_1754048972051"
      }, {
        "methodName" : "total",
        "sourceCode" : "total()",
        "resolvedMethod" : "d2.total()",
        "returnType" : "int",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_417_1754048972051"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(insert)",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "insert" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_418_1754048972051"
      }, {
        "methodName" : "executeUpdate",
        "sourceCode" : "stmt.executeUpdate(insert)",
        "resolvedMethod" : "java.sql.Statement.executeUpdate(java.lang.String)",
        "returnType" : "int",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "insert" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_419_1754048972051"
      }, {
        "methodName" : "executeQuery",
        "sourceCode" : "stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\")",
        "resolvedMethod" : "java.sql.Statement.executeQuery(java.lang.String)",
        "returnType" : "java.sql.ResultSet",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "\"SELECT * FROM JEREMY.TICKET\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_420_1754048972052"
      }, {
        "methodName" : "total",
        "sourceCode" : "total()",
        "resolvedMethod" : "d2.total()",
        "returnType" : "int",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_421_1754048972063"
      }, {
        "methodName" : "displayAllTickets",
        "sourceCode" : "displayAllTickets()",
        "resolvedMethod" : "d2.displayAllTickets()",
        "returnType" : "java.lang.String",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_422_1754048972063"
      }, {
        "methodName" : "executeQuery",
        "sourceCode" : "stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\")",
        "resolvedMethod" : "java.sql.Statement.executeQuery(java.lang.String)",
        "returnType" : "java.sql.ResultSet",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "\"SELECT * FROM JEREMY.TICKET\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_423_1754048972063"
      }, {
        "methodName" : "total",
        "sourceCode" : "total()",
        "resolvedMethod" : "d2.total()",
        "returnType" : "int",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_424_1754048972064"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"SQL problem \" + e)",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"SQL problem \" + e" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_425_1754048972064"
      } ],
      "cyclomaticComplexity" : 2,
      "totalLines" : 19,
      "codeLines" : 19,
      "commentLines" : 0,
      "blankLines" : 0
    }, {
      "name" : "total",
      "qualifiedName" : "d2.total",
      "signature" : "total()",
      "returnType" : "int",
      "resolvedReturnType" : "int",
      "parameters" : [ ],
      "parameterTypes" : [ ],
      "modifiers" : "[public ]",
      "annotations" : "[]",
      "comment" : "\r\n     *\r\n     * @return\r\n     ",
      "body" : "{\n    int rows = 0;\n    try {\n        stmt = con.createStatement();\n        rs = stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\");\n        while (rs.next()) {\n            rows++;\n        }\n        System.out.println(\"There are \" + rows + \" record in the table\");\n    } catch (Exception e) {\n    }\n    return rows;\n}",
      "uniqueId" : "AST_426_1754048972067",
      "symbolId" : "d2.total()",
      "visibility" : "PUBLIC",
      "isAbstract" : false,
      "isStatic" : false,
      "isFinal" : false,
      "isSynchronized" : false,
      "isNative" : false,
      "isDefault" : false,
      "controlFlowStatements" : [ "Try", "Catch: Exception e", "While: rs.next()" ],
      "methodCalls" : [ {
        "methodName" : "createStatement",
        "sourceCode" : "con.createStatement()",
        "resolvedMethod" : "java.sql.Connection.createStatement()",
        "returnType" : "java.sql.Statement",
        "receiverType" : "java.sql.Connection",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_427_1754048972068"
      }, {
        "methodName" : "executeQuery",
        "sourceCode" : "stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\")",
        "resolvedMethod" : "java.sql.Statement.executeQuery(java.lang.String)",
        "returnType" : "java.sql.ResultSet",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "\"SELECT * FROM JEREMY.TICKET\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_428_1754048972071"
      }, {
        "methodName" : "next",
        "sourceCode" : "rs.next()",
        "resolvedMethod" : "java.sql.ResultSet.next()",
        "returnType" : "boolean",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_429_1754048972071"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"There are \" + rows + \" record in the table\")",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"There are \" + rows + \" record in the table\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_430_1754048972073"
      } ],
      "cyclomaticComplexity" : 3,
      "totalLines" : 13,
      "codeLines" : 13,
      "commentLines" : 0,
      "blankLines" : 0
    }, {
      "name" : "displayAllTickets",
      "qualifiedName" : "d2.displayAllTickets",
      "signature" : "displayAllTickets()",
      "returnType" : "String",
      "resolvedReturnType" : "java.lang.String",
      "parameters" : [ ],
      "parameterTypes" : [ ],
      "modifiers" : "[public ]",
      "annotations" : "[]",
      "comment" : "\r\n     *\r\n     * @return\r\n     ",
      "body" : "{\n    String p = \" \";\n    try {\n        rs = stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\");\n        p = loopDBInfo(rs);\n        System.out.println(p);\n    } catch (Exception e) {\n        System.out.println(\"SQL problem \" + e);\n    }\n    return p;\n}",
      "uniqueId" : "AST_431_1754048972079",
      "symbolId" : "d2.displayAllTickets()",
      "visibility" : "PUBLIC",
      "isAbstract" : false,
      "isStatic" : false,
      "isFinal" : false,
      "isSynchronized" : false,
      "isNative" : false,
      "isDefault" : false,
      "controlFlowStatements" : [ "Try", "Catch: Exception e" ],
      "methodCalls" : [ {
        "methodName" : "executeQuery",
        "sourceCode" : "stmt.executeQuery(\"SELECT * FROM JEREMY.TICKET\")",
        "resolvedMethod" : "java.sql.Statement.executeQuery(java.lang.String)",
        "returnType" : "java.sql.ResultSet",
        "receiverType" : "java.sql.Statement",
        "isStatic" : false,
        "arguments" : [ "\"SELECT * FROM JEREMY.TICKET\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_432_1754048972080"
      }, {
        "methodName" : "loopDBInfo",
        "sourceCode" : "loopDBInfo(rs)",
        "resolvedMethod" : "d2.loopDBInfo(java.sql.ResultSet)",
        "returnType" : "java.lang.String",
        "receiverType" : "d2",
        "isStatic" : false,
        "arguments" : [ "rs" ],
        "argumentTypes" : [ "java.sql.ResultSet" ],
        "uniqueId" : "AST_433_1754048972080"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(p)",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "p" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_434_1754048972081"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"SQL problem \" + e)",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"SQL problem \" + e" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_435_1754048972081"
      } ],
      "cyclomaticComplexity" : 2,
      "totalLines" : 11,
      "codeLines" : 11,
      "commentLines" : 0,
      "blankLines" : 0
    }, {
      "name" : "loopDBInfo",
      "qualifiedName" : "d2.loopDBInfo",
      "signature" : "loopDBInfo(ResultSet)",
      "returnType" : "String",
      "resolvedReturnType" : "java.lang.String",
      "parameters" : [ "rs" ],
      "parameterTypes" : [ "java.sql.ResultSet" ],
      "modifiers" : "[public ]",
      "annotations" : "[]",
      "comment" : "\r\n     *\r\n     * @param rs\r\n     * @return\r\n     ",
      "body" : "{\n    String p = \"\";\n    try {\n        while (rs.next()) {\n            int id_col = rs.getInt(\"ID\");\n            String first_name = rs.getString(\"NAME\");\n            String phone = rs.getString(\"PHONE\");\n            String date = rs.getString(\"DATE\");\n            String status = rs.getString(\"STATUS\");\n            String prob = rs.getString(\"PROBLEM\");\n            p = p + (id_col + \" \" + first_name + \" \" + phone + \" \" + date + \" \" + status + \" \" + prob + \"\\n\");\n            // System.out.println(p);\n        }\n    } catch (Exception e) {\n        System.out.println(\"SQL problem \" + e);\n    }\n    return p;\n}",
      "uniqueId" : "AST_436_1754048972083",
      "symbolId" : "d2.loopDBInfo(ResultSet)",
      "visibility" : "PUBLIC",
      "isAbstract" : false,
      "isStatic" : false,
      "isFinal" : false,
      "isSynchronized" : false,
      "isNative" : false,
      "isDefault" : false,
      "controlFlowStatements" : [ "Try", "Catch: Exception e", "While: rs.next()" ],
      "methodCalls" : [ {
        "methodName" : "next",
        "sourceCode" : "rs.next()",
        "resolvedMethod" : "java.sql.ResultSet.next()",
        "returnType" : "boolean",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ ],
        "argumentTypes" : [ ],
        "uniqueId" : "AST_437_1754048972084"
      }, {
        "methodName" : "getInt",
        "sourceCode" : "rs.getInt(\"ID\")",
        "resolvedMethod" : "java.sql.ResultSet.getInt(java.lang.String)",
        "returnType" : "int",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"ID\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_438_1754048972084"
      }, {
        "methodName" : "getString",
        "sourceCode" : "rs.getString(\"NAME\")",
        "resolvedMethod" : "java.sql.ResultSet.getString(java.lang.String)",
        "returnType" : "java.lang.String",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"NAME\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_439_1754048972084"
      }, {
        "methodName" : "getString",
        "sourceCode" : "rs.getString(\"PHONE\")",
        "resolvedMethod" : "java.sql.ResultSet.getString(java.lang.String)",
        "returnType" : "java.lang.String",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"PHONE\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_440_1754048972084"
      }, {
        "methodName" : "getString",
        "sourceCode" : "rs.getString(\"DATE\")",
        "resolvedMethod" : "java.sql.ResultSet.getString(java.lang.String)",
        "returnType" : "java.lang.String",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"DATE\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_441_1754048972084"
      }, {
        "methodName" : "getString",
        "sourceCode" : "rs.getString(\"STATUS\")",
        "resolvedMethod" : "java.sql.ResultSet.getString(java.lang.String)",
        "returnType" : "java.lang.String",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"STATUS\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_442_1754048972085"
      }, {
        "methodName" : "getString",
        "sourceCode" : "rs.getString(\"PROBLEM\")",
        "resolvedMethod" : "java.sql.ResultSet.getString(java.lang.String)",
        "returnType" : "java.lang.String",
        "receiverType" : "java.sql.ResultSet",
        "isStatic" : false,
        "arguments" : [ "\"PROBLEM\"" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_443_1754048972085"
      }, {
        "methodName" : "println",
        "sourceCode" : "System.out.println(\"SQL problem \" + e)",
        "resolvedMethod" : "java.io.PrintStream.println(java.lang.String)",
        "returnType" : "void",
        "receiverType" : "java.io.PrintStream",
        "isStatic" : false,
        "arguments" : [ "\"SQL problem \" + e" ],
        "argumentTypes" : [ "java.lang.String" ],
        "uniqueId" : "AST_444_1754048972085"
      } ],
      "cyclomaticComplexity" : 3,
      "totalLines" : 18,
      "codeLines" : 17,
      "commentLines" : 1,
      "blankLines" : 0
    } ]
  } ]
}